{"version":3,"file":"static/js/382.8fcaba6b.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Card/Card.styled.js","components/Card/Card.jsx","services/fetchUsers.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonMain = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  z-index:5;\n  width: 196px;\n  height: 50px;\n  border: none;\n  border-radius: ${p => p.theme.radii.btn};\n  box-shadow: ${p => p.theme.colors.btnBoxShadow};\n  background-color: ${p => p.selected? p.theme.colors.accentGreen : p.theme.colors.mainLight };\n  transition: ${p => p.theme.transitions.main};\n\n  &:hover, &:focus {\n  transform: ${p => p.role === 'load' ? 'scale(1.1)' : 'unset'};\n \n}\n  \n`;\n\nexport const ButtonText = styled.span`\n   font-family: ${p => p.theme.fonts.main};\n   font-weight: ${p => p.theme.fontWeights[1]};\n   font-size: ${p => p.theme.fontSizes.m};\n   line-height: ${p => p.theme.lineHeights.main};\n   color: ${p => p.theme.colors.mainDark};\n   text-align: center;\n   text-transform: uppercase;\n`;\n","import { ButtonMain, ButtonText } from './Button.styled';\n\nexport const ButtonUI = ({ text, onClick, selected, role }) => {\n    return (\n      <ButtonMain type='button' selected={selected} onClick={onClick} role={role}>\n        <ButtonText>{text}</ButtonText>\n      </ButtonMain>\n    );\n  };","import styled from 'styled-components';\n\nexport const CardBox = styled.li`\nposition: relative;\nbox-sizing:border-box;\nwidth:380px;\nheight:460px;\ndisplay:flex;\noverflow: hidden;\nflex-direction:column;\nalign-items:center;\njustify-content:space-between;\npadding:28px 36px 36px 36px;\nbackground: ${p => p.theme.colors.bgViolet};\nbox-shadow: ${p => p.theme.colors.cardBoxShadow};\nborder-radius: ${p => p.theme.radii.card};\ntransition:${p => p.theme.transitions.main};\ntransition-duration:350ms;\n\n&:after {\n  content: \"\";\n  position: absolute;\n  top: -110%;\n  left: -210%;\n  width: 200%;\n  height: 200%;\n  opacity: 0;\n  transform: rotate(30deg);\n  background: rgba(255, 255, 255, 0.13);\n  background: linear-gradient(\n    to right, \n    rgba(255, 255, 255, 0.13) 0%,\n    rgba(255, 255, 255, 0.13) 77%,\n    rgba(255, 255, 255, 0.5) 92%,\n    rgba(255, 255, 255, 0.0) 100%\n  );\n}\n\n&:hover:after {\n    z-index:-1;\n  opacity: 0.8;\n  top: -30%;\n  left: -30%;\n  transition-property: left, top, opacity;\n  transition-duration: 0.7s, 0.7s, 0.15s;\n  transition-timing-function: ease;\n}\n\n/* &:active:after {\n  opacity: 0;\n} */\n\n&:hover {\n    transform:scale(1.03);\n}\n`\n\nexport const LogoWrapper = styled.div`\nposition:absolute;\ntop:20px;\nleft:20px;\ndisplay:flex;\njustify-content:center;\n\n& img {\n    width:76px;\n    height:22px;\n}\n`\n\nexport const TopImage = styled.img`\nwidth:${p => p.role === 'tweets'|| p.role === 'followers'? 'auto': '308px'};\nheight:168px;\n`\n\nexport const TextWrapper= styled.div`\nwidth:100%;\nflex-direction:column;\nalign-items:center;\njustify-content:center;\nposition: relative;\nrow-gap:16px;\nmargin-bottom:26px;\n`\n\nexport const TextData = styled.p`\ntext-align:center;\ncolor: ${p => p.theme.colors.mainLight};\nfont-family: ${p => p.theme.fonts.main};\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight:${p => p.theme.fontWeights[0]};\nline-height: ${p => p.theme.lineHeights.main};\ntext-transform:uppercase;\n\n&:not(:last-of-type){\n    margin-bottom:16px;\n}\n`\n\nexport const AvatarWrapper = styled.div`\nposition: relative;\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\njustify-content:center;\nmargin-bottom:26px;\nborder-radius: ${p => p.theme.radii.circle};\n\n`\nexport const Avatar = styled.img`\nborder-radius: ${p => p.theme.radii.circle};\nz-index:2;\n`\n\nexport const AvatarCircle = styled.img`\nposition:absolute;\nz-index:20;\n`\n\nexport const AvatarLine = styled.img`\nposition:absolute;\nz-index:0;\n`\n\nexport const AwardWrapper = styled.div`\ndisplay:${p => p.role === 'tweets'|| p.role === 'followers'? 'flex': 'none'};\nposition:absolute;\nleft:${p => p.role === 'tweets'?'10%': '-5%'};\ntop:${p => p.role === 'tweets'?'-15%': 'unset'};\nbottom: ${p => p.role === 'tweets'?'unset': '-5%'};\n\n\n& img {\n    width:42px;\n}\n`","import { useState } from \"react\";\nimport { ButtonUI } from \"components/Button/Button\";\nimport { Avatar, AvatarCircle, AvatarLine, AvatarWrapper, AwardWrapper, CardBox, LogoWrapper, TextData, TextWrapper, TopImage } from \"./Card.styled\";\nimport { updateUserData } from \"services/fetchUsers\";\n\nimport logo from '../../images/logo-min.png';\nimport top from '../../images/top-min.png';\nimport ellipse from '../../images/ellipse-min.png';\nimport line from '../../images/line-min.png';\nimport tweet from '../../images/award-min.png';\nimport heart from '../../images/heart-min.png';\nimport fire from '../../images/fire-min.png';\n\nexport const CardUI = ({ id, user,avatar,followed,tweets,followers,role }) => {\n    const [selection, setSelection] = useState(followed)\n    const [followersCount, setFollowersCount] = useState(followers)\n   \n\n    const handleBtnClick = () => {\n        setSelection(!selection)\n        if(selection) {\n            updateUserData(id,{user,avatar,followed:!selection,tweets, followers: followersCount-1})\n            setFollowersCount(followersCount-1)\n\n        }\n        if(!selection) {\n            updateUserData(id,{user,avatar,followed:!selection,tweets, followers: followersCount+1})\n            setFollowersCount(followersCount+1)\n        }    \n    }\n\n    return (\n      <CardBox key={id}>\n        <LogoWrapper>\n            <img src={logo} alt=\"logo\"/>\n        </LogoWrapper>\n        <TopImage alt=\"decoration\" src={role === 'tweets' ? tweet: role === 'followers' ? heart:top} role={role}/>\n\n        <AvatarWrapper>\n            <AvatarLine  alt='line' src={line} height={8}/>\n            <AvatarCircle  alt='frame' src={ellipse} width={80} height={80} />\n           <Avatar src={avatar} alt={user} width={62} height={62}/>\n        </AvatarWrapper>\n        <TextWrapper>\n        <TextData>{tweets.length} tweets</TextData>\n        <AwardWrapper role={role}>\n        <img src={fire} alt=\"fire\"/>\n        </AwardWrapper>\n        <TextData>{followersCount.toLocaleString('en-US')} followers</TextData>\n        </TextWrapper>\n        <ButtonUI text={selection? \"Following\" : \"Follow\"} onClick={handleBtnClick} selected={selection}/>\n      </CardBox>\n    );\n  };","import axios from \"axios\";\n\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL\n\nexport const fetchAllUsers = async (page,per_page,filter) => {\n    try {\n        if (page && per_page) {\n        return await axios\n          .get(`users/?page=${page}&limit=${per_page}&followed=${filter}`)\n          .then(({ data }) => {        \n            return data;\n          });\n      }\n      return await axios.get(`users/?followed=${filter}`).then( ({ data }) => {\n           return data;\n      });\n    }\n    catch(err) {\n        console.log(err);\n    }\n  };\n\n  export const updateUserData = async(id,body)=>{\n   try{\n    await axios.put(`users/${id}`, {...body}).then( ({ data }) => {\n     return data;\n    })}\n    catch(err) {\n        console.log(err);\n    }\n  }"],"names":["ButtonMain","styled","p","theme","radii","btn","colors","btnBoxShadow","selected","accentGreen","mainLight","transitions","main","role","ButtonText","fonts","fontWeights","fontSizes","m","lineHeights","mainDark","ButtonUI","text","onClick","type","CardBox","bgViolet","cardBoxShadow","card","LogoWrapper","TopImage","TextWrapper","TextData","l","AvatarWrapper","circle","Avatar","AvatarCircle","AvatarLine","AwardWrapper","CardUI","id","user","avatar","followed","tweets","followers","useState","selection","setSelection","followersCount","setFollowersCount","src","alt","tweet","heart","line","height","width","length","fire","toLocaleString","Button","updateUserData","axios","process","fetchAllUsers","page","per_page","filter","then","data","console","log","body"],"sourceRoot":""}