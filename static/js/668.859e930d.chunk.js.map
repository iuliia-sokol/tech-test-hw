{"version":3,"file":"static/js/668.859e930d.chunk.js","mappings":"0RAEaA,EAAYC,EAAAA,GAAAA,GAAH,mKAQTC,EAAqBD,EAAAA,GAAAA,IAAH,uGAOlBE,EAAmBF,EAAAA,GAAAA,IAAH,4D,8BCdhBE,EAAmBF,EAAAA,GAAAA,IAAH,2GAShBG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAF,yOAgBTK,EAAOL,EAAAA,GAAAA,IAAH,0QASR,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAAnB,IACK,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,IAAlB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAUC,CAAtB,IACA,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,YAAY,EAAxB,IACA,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYJ,IAAxB,IACF,SAAAL,GAAC,OAAIA,EAAEC,MAAMS,YAAYL,IAAxB,I,mBCvCFM,EAAc,WACvB,OACA,UAAC,EAAD,YACA,SAACd,EAAD,CAAWe,GAAG,IAAd,UACI,0BACA,gBAAKC,KAAMC,EAAAA,EAAM,mBAGrB,SAACf,EAAD,wBAKH,EC0CD,EAhDe,WACX,OAAkCgB,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAoCN,EAAAA,EAAAA,UAAS,GAA7C,eAAOO,EAAP,KAAmBC,EAAnB,MAGEC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,mCAAG,8FAAQC,EAAR,EAAQA,KAAKC,EAAb,EAAaA,SAAb,SAETV,GAAa,GAFJ,UAGAW,EAAAA,EAAAA,GAAcF,EAAKC,GAAUE,MAAK,SAACC,GAChDA,EAAKC,QAPE,GAOmBZ,GAAmB,GAASA,GAAmB,GACzEE,EAAS,GAAD,eAAKD,IAAL,OAAeU,IAAO,IALjB,wEAODE,QAAQC,IAAR,MAPC,yBASThB,GAAa,GATJ,4EAAH,sDAadQ,EAAS,CAACC,KAAKJ,EAAYK,SAhBhB,IAkBZ,GAAE,CAACL,IAMN,OACA,2BACI,UAACY,EAAA,EAAD,WACClB,IAAa,SAACmB,EAAA,EAAD,KACd,SAACvC,EAAD,WACA,SAACe,EAAD,OAEA,SAAClB,EAAD,UACC2B,EAAMW,OAAO,GAAKX,EAAMgB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAOC,EAAnB,EAAmBA,UAAUC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,SAArC,OAAmD,SAACC,EAAA,EAAD,CAAiBN,GAAIA,EAAII,OAAQA,EAAQD,UAAWA,EAAWE,SAAUA,EAAUJ,KAAMA,EAAMC,OAAQA,GAA1FF,EAAhE,MAG3BnB,IAAkB,SAACvB,EAAD,WAChB,SAACiD,EAAA,EAAD,CAAUC,KAAK,YAAYC,KAAK,OAAOC,QAhBzB,WAClBxB,EAAcD,EAAW,EAC5B,UAmBN,C","sources":["pages/Tweets/Tweets.styled.js","components/GoBackButton/GoBackButton.styled.js","components/GoBackButton/GoBackButton.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const UsersList = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\nrow-gap:26px;\nalign-items: center;\njustify-items:center;\n`\n\nexport const LoadMoreBtnWrapper = styled.div`\ndisplay:flex;\njustify-content:center;\nmargin-top:32px;\nmargin-bottom:32px;\n`\n\nexport const GoBackBtnWrapper = styled.div`\ndisplay:flex;\nposition: relative;\n`","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const GoBackBtnWrapper = styled.div`\nposition: relative;\n\n\n&:hover div, &:focus div {\nopacity:1;\nvisibility:1;\n}\n`\nexport const GoBackBtn =styled(NavLink)`\nwidth:fit-content;\ndisplay:flex;\njustify-content:center;\nbackground-color:transparent;\nborder:none;\nmargin-bottom:26px;\n\n& svg {\n    width: 50px;\n    height:50px;\n    transform:rotate(270deg);\n}\n\n`\n\nexport const Hint = styled.div`\nposition:absolute;\ntop:20%;\nleft:100%;\nopacity:0;\nvisibility:0;\ndisplay:inline-flex;\ntext-transform:uppercase;\nwidth:max-content;\ncolor: ${p => p.theme.colors.mainLight};\nfont-family: ${p => p.theme.fonts.main};\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight:${p => p.theme.fontWeights[1]};\nline-height: ${p => p.theme.lineHeights.main};\ntransition: ${p => p.theme.transitions.main};\n`","import { GoBackBtn, GoBackBtnWrapper, Hint } from \"./GoBackButton.styled\"\nimport sprite from '../../images/icons_sprite.svg';\n\nexport const GoBackBtnUI = () =>{\n    return(\n    <GoBackBtnWrapper>\n    <GoBackBtn to='/'>\n        <svg>\n        <use href={sprite + `#up-arrow`} />\n        </svg>     \n    </GoBackBtn>\n    <Hint>\n        Go back\n    </Hint>\n    </GoBackBtnWrapper>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { fetchAllUsers } from \"services/fetchUsers\";\n\nimport { CardUI } from \"components/Card/Card\";\nimport { Container } from \"components/Container/Container\";\nimport { GoBackBtnWrapper, LoadMoreBtnWrapper, UsersList } from \"./Tweets.styled\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { ButtonUI } from \"components/Button/Button\";\nimport { GoBackBtnUI } from \"components/GoBackButton/GoBackButton\";\n\nconst Tweets = () => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [showLoadMoreBtn, setShowLoadMoreBtn] = useState(false)\n    const [users, setUsers] = useState([])\n    const [pageNumber, setPageNumber] = useState(1)\n    const PER_PAGE = 12\n  \n      useEffect(() => {  \n          const getUsers = async ({page,per_page})=>{\n              try{\n                  setIsLoading(true)\n              return await fetchAllUsers(page,per_page).then((data) => {\n              data.length >= PER_PAGE ? setShowLoadMoreBtn(true) :  setShowLoadMoreBtn(false)\n              setUsers([...users, ...data])}\n              )}\n              catch(err) {console.log(err)}\n              finally{\n                  setIsLoading(false)\n              }\n           }\n         \n          getUsers({page:pageNumber, per_page:PER_PAGE})\n          // eslint-disable-next-line\n        }, [pageNumber]);\n  \n      const handleLoadMore =() =>{\n          setPageNumber(pageNumber+1)\n      }\n  \n      return (\n      <main>\n          <Container>\n          {isLoading && <Loader/>}\n          <GoBackBtnWrapper>\n          <GoBackBtnUI />\n          </GoBackBtnWrapper>\n          <UsersList>\n          {users.length>0 && users.map(({id, user, avatar,followers,tweets, followed}) => <CardUI key={id} id={id} tweets={tweets} followers={followers} followed={followed} user={user} avatar={avatar} />)}\n          </UsersList>\n  \n           {showLoadMoreBtn &&<LoadMoreBtnWrapper>\n              <ButtonUI text='Load more' role='load' onClick={handleLoadMore}/>\n          </LoadMoreBtnWrapper>}\n          </Container>\n      </main>)\n    \n}\n\nexport default Tweets;"],"names":["UsersList","styled","LoadMoreBtnWrapper","GoBackBtnWrapper","GoBackBtn","NavLink","Hint","p","theme","colors","mainLight","fonts","main","fontSizes","l","fontWeights","lineHeights","transitions","GoBackBtnUI","to","href","sprite","useState","isLoading","setIsLoading","showLoadMoreBtn","setShowLoadMoreBtn","users","setUsers","pageNumber","setPageNumber","useEffect","getUsers","page","per_page","fetchAllUsers","then","data","length","console","log","Container","Loader","map","id","user","avatar","followers","tweets","followed","Card","Button","text","role","onClick"],"sourceRoot":""}